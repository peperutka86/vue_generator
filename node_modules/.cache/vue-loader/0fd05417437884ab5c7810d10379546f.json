{"remainingRequest":"/Users/dijana/vue-dijana/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/dijana/vue-dijana/src/App.vue?vue&type=template&id=7ba5bd90","dependencies":[{"path":"/Users/dijana/vue-dijana/src/App.vue","mtime":1641303558799},{"path":"/Users/dijana/vue-dijana/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dijana/vue-dijana/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/dijana/vue-dijana/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/dijana/vue-dijana/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dijana/vue-dijana/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CiAgPEhlYWRlciAgQHRvZ2dsZS1hZGQtdGFzayA9InRvZ2dsZUFkZFRhc2siICB0aXRsZT0iVGFzayBUcmFja2VyIiA6c2hvd0FkZFRhc2s9InNob3dBZGRUYXNrIiAvPgogIDxkaXYgdi1zaG93PSJzaG93QWRkVGFzayI+CiAgICA8QWRkVGFzayAgQGFkZC10YXNrPSJhZGRUYXNrIiAvPgogIDwvZGl2PgogIAogIDxUYXNrcyBAdG9nZ2xlLXJlbWluZGVyPSJ0b2dnbGVSZW1pbmRlciIgIEBkZWxldGUtdGFzaz0iZGVsZXRlVGFzayIgOnRhc2tzPSJ0YXNrcyIgLz4KPC9kaXY+Cg=="},{"version":3,"sources":["/Users/dijana/vue-dijana/src/App.vue"],"names":[],"mappings":";AACA,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACpvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;EACjC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEL,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AACtF,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/dijana/vue-dijana/src/App.vue","sourceRoot":"","sourcesContent":["<template>\n<div class=\"container\">\n  <Header  @toggle-add-task =\"toggleAddTask\"  title=\"Task Tracker\" :showAddTask=\"showAddTask\" />\n  <div v-show=\"showAddTask\">\n    <AddTask  @add-task=\"addTask\" />\n  </div>\n  \n  <Tasks @toggle-reminder=\"toggleReminder\"  @delete-task=\"deleteTask\" :tasks=\"tasks\" />\n</div>\n</template>\n\n<script>\n\n\nimport Header from './components/Header.vue'\nimport Tasks from './components/Tasks.vue'\nimport AddTask from './components/AddTask.vue'\n\n\nexport default {\n  name: 'App',\n  components: {\n    Header,\n    Tasks,\n    AddTask\n   \n    \n  },\n  data() {\n    return {\n      tasks: [],\n      showAddTask: false\n    }\n  },\n  methods: {\n    toggleAddTask(){\n      this.showAddTask = !this.showAddTask\n    },\n    async addTask(task){\n    const res = await fetch('http://localhost:3000/tasks', \n    {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(task),\n    })\n     \n      const data = await res.json()\n      this.tasks = [... this.tasks, data]\n    },\n    async deleteTask(id){\n      if (confirm('Are you sure?')) {\n        const res = await fetch(`http://localhost:3000/tasks/${id}`,{\n          method: 'DELETE',\n        }\n        )\n        res.status === 200\n        ? (this.tasks = this.tasks.filter((task) => task.id !== id))\n        : alert('Error deleting task')\n\n\n      \n      }\n    },\n    async toggleReminder(id){\n      const taskToToggle =  await this.fetchTask(id)\n      const updTask = \n      {...taskToToggle, reminder: !taskToToggle.reminder}\n\n      const res = await fetch(`http://localhost:3000/tasks/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(updTask),\n      })\n      const data = await res.json()\n\n      this.tasks = this.tasks.map((task) => task.id === id ? {...task, reminder: data.reminder} : task)\n    },\n     async fetchTasks() {\n      const res = await fetch('http://localhost:3000/tasks')\n      const data = await res.json()\n      return data\n    },\n    \n   \n    async fetchTask(id) {\n      const res = await fetch(`http://localhost:3000/tasks/${id}`)\n      const data = await res.json()\n      return data\n    }\n    },\n      \n   async created(){\n    this.tasks=  await this.fetchTasks()\n  //  [\n     \n  //   {\n  //     id: 1,\n  //     text: 'Doctors Appointment',\n  //     day: 'March 5th at 2:30pm',\n  //     reminder: true\n  //   },\n  //   {\n  //     id: 2,\n  //     text: 'Meeting with boss',\n  //     day: 'March 6th at 1:30pm',\n  //     reminder: true\n  //   },\n  //   {\n  //     id: 3,\n  //     text: 'Food shopping',\n  //     day: 'March 7th at 2:00pm',\n  //     reminder: false\n  //   },\n  // ]\n\n },\n  }\n\n   \n      \n  \n  \n\n</script>\n\n<style>\n@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400&display=swap');\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\nbody {\n  font-family: 'Poppins', sans-serif;\n}\n.container {\n  max-width: 500px;\n  margin: 30px auto;\n  overflow: auto;\n  min-height: 300px;\n  border: 1px solid steelblue;\n  padding: 30px;\n  border-radius: 5px;\n\n}\n\n.btn {\n  display: inline-block;\n  background: #000;\n  color: #fff;\n  border: none;\n  padding: 10px 20px;\n  margin: 5px;\n  border-radius: 5px;\n  cursor: pointer;\n  text-decoration: none;\n  font-size: 15px;\n  font-family: inherit;\n}\n\n</style>\n"]}]}